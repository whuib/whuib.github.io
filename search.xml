<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SRT</title>
      <link href="/2023/11/17/1A/"/>
      <url>/2023/11/17/1A/</url>
      
        <content type="html"><![CDATA[<h1 id="SRT"><a href="#SRT" class="headerlink" title="SRT"></a>SRT</h1><h3 id="1A"><a href="#1A" class="headerlink" title="1A"></a>1A</h3><p>大家好，欢迎来到我们关于Tasktream的讨论。通过恢复程序结构来加速任务并行工作负载是我们工作的目标。我们的目标是将这些加速器的适用范围扩展到具有不规则并行性的工作负载，其中包括树和图形工作负载、数据基础和矩阵分解。这些工作负载的共同特点是异构任务，其大小和资源需求可变，以及任务之间存在依赖关系。现有的任务并行工作没有考虑任务之间的依赖关系，并错过了一些后面我们将演示的机会。为了可视化当前任务并行工作的问题，考虑这个任务依赖图，其中节点是任务类型，边表示任务之间的依赖关系。在传统的多代码可重构硬件上，这些任务类型的不同实例将在粗粒度上调度，而它们将通过共享内存进行通信。通过共享内存的同步往往成为关键瓶颈，并影响性能。我们的见解是在硬件中暴露这些任务之间的依赖关系，并使用一种新颖的分布式任务管理系统来强制执行它们。因此，在前面的例子中，依赖关系现在将通过这些单元进行满足。我们的目标是为可重构加速器实现有效的任务并行。我们开发了一种名为Tasktream的新型程序表示，以实现负载平衡和局部优化。对于负载平衡，我们有一个创建边，其中子任务由父任务创建并调度以平衡负载。在生产者消费者关系存在的情况下，父任务和子任务将一起调度，并通过它们传输数据。在粗粒度重用存在的情况下，任务可能会被动态分组，数据可能会被多播到它们。在这次演讲中，我将首先讨论基于共享内存的任务模型的低效性，然后描述我们的Tasktream解决方案，这是一种用于利用程序结构的新型程序表示。接着，我们将讨论Tasktream在可重构硬件上的实现，然后我将介绍评估和结论。我将使用Jalesk作为驱动示例来激发我们的提案。以下是Celesky的伪代码，其中有一个外循环，并执行多个计算。你不需要理解伪代码，因为我将在后面讨论计算和依赖关系。开始计算，有三种类型的计算，一种是我们称之为点的标量计算，然后是矢量上的计算，最后是矩阵上的计算，因为这些计算有不同的计算复杂性，Celesky具有异构任务。现在让我们看看如何使用传统任务依赖图来利用异构任务。为了做到这一点，我们还需要知道依赖关系。因此，在单次迭代内，点任务对矢量和矩阵任务具有标量依赖。为了为这种工作负载设计任务依赖图，我们将创建这三个任务，即点、矢量和矩阵。对于标量依赖，添加到它的创建边。接下来的问题是任务的颗粒度应该是多少，这在任务管理硬件的压力和调度的灵活性之间存在权衡。因此，我们将Telescome矩阵和矢量划分为正方形中心角，最后，为了强制执行所有依赖关系，我们需要在某个地方设置一个屏障或程序完成。为了在核心屏幕级别了解依赖关系，让我们看看多次迭代发生了什么。在这里，跨迭代之间的每个矩阵元素之间存在一个粗粒度依赖关系。通常，这些依赖关系在粗粒度上被强制执行，这就是为什么我们会在任务依赖图上放置一个完整的屏障的原因。为了了解它的影响，让我们看看如何在这个传统硬件上实现这个任务依赖图。任务实例将在可重构核心上创建，然后将其矢量和矩阵任务创建，并通过共享内存将数据写入内存。由于任务的大小不同，这将导致负载不平衡，最终由于在屏障上等待而导致同步开销。为了应对这些挑战，我们提出了一种新颖的Tasktream执行模型，该模型包含了在可重构硬件上实现任务并行ism的所有必要信息。其中一项功能是核心掩码，每个任务类型都可以与一个设置位的核心掩码配对，表示可以感知哪个核心。例如，点和矢量的实例可以被调度到仅核心0，而矩阵可以被调度到核心1、2和3。因此，不需要重新配置。Tasktream最重要的方面是我们如何利用任务之间的通信和计算结构，我们使用三个边缘来实现这一点，第一个是创建，它实现了负载平衡，第二和第三个是流恢复边缘，其中包括生产者-消费者依赖的流边缘，以及用于导出空间重用的批处理边缘。让我们从创建开始。</p><p>在创建边缘中，我们提取了Jealeski的任务时间图的一部分，其中我们查看点到矩阵任务的情况。在这里，矩阵任务的不同实例可以是可变大小的。我们引入了一个大小提示的符号，可以指定任务实例的相对大小。对于一个点来说，它始终是1，因此是一个常数。而对于矩阵来说，它可以是三角形或正方形，给定值1和2，而没有任何大小提示。所有这些任务实例将以类似的方式处理，然后可以调度它们，使得一些核心获得更多的工作，如3个正方形，而其他核心可能获得较少的工作。</p><p>对于流边缘，正如我们在对Knife任务的示例中看到的那样，我们在矩阵任务之后放置了一个屏障，以强制执行这些矩阵元素之间的依赖关系。然而，在这里，我们可以使用流边缘来表达这些依赖关系。这意味着任务实例1和实例2是依赖的，在硬件中，这些依赖的任务实例将被核调度，并通过它们进行数据流传输。并发调度任务增加了并行性，从而提高性能。</p><p>Jealeski是一个非常规则的工作负载，然而，我们发现在许多不规则的工作负载中也会发生任务之间的结构复原。在这张幻灯片中，我展示了Cameo Neighbors的例子，其实现涉及首先遍历kd树以过滤出要查找的数据范围，然后进行密集搜索。对于任何knn查询，首先遍历树，然后在达到叶子节点时对原始数据进行密集搜索，可能存在多个这样的并行查询。考虑这个查询的程序顺序的例子，在这里，我用蓝色标记了最终落在同一个叶子节点上的查询。在批处理优化中，我们动态地识别这种重用，并将它们一起调度。在这个例子中，q1、q3、q5和q7将同时调度，然后V1将仅访问一次，并通过它们进行多播。这种批处理优化使得能够利用特殊局部性。</p><p>Tasktream的另一个关键特征是如何在可重构硬件上实现。第一个想法是将Tasktream实现为分层图，其中Tasktream节点实现为数据流图，由计算和内存节点的组合连接起来，通过依赖边连接。在硬件方面，我们从已经良好运作的用于数据流执行模型的传统硬件开始，然后将其扩展为Tasktream模型。因此，这里有一个用于CGRA计算和地址生成硬件的分离计算硬件，它们通过端口接口连接。最初，没有任务时，控制代码将负责将工作分配给计算和内存。但是现在，工作可能会被动态地创建，并由任务管理单元处理。我们还有一个路由器，因为它是由网格连接的多核硬件。从现在开始，我们将抽象出可重构核心，只关注任务管理单元。</p><p>让我们从创建边缘开始。这里有两个主要组件。首先是任务参数缓冲区，它按ID对所有准备好和挂起的任务进行排序，并用TID旋转它。对于任何挂起的任务，都有一个确认缓冲区，它将确认任务等待的数据可用，并将该任务标记为就绪。这个任务参数缓冲区的好处是可以在任务准备好时立即调度任务。作为一个工作示例，假设控制核心创建了一个任务T1，然后它将通过硬件执行，并在可重构核心上创建一些动态任务。那些一般任务将通过这个确认缓冲区传递，并存储在任务参数缓冲区中，直到它们准备好。之后，它们可以调度到可重构核心上。让我们转向批处理硬件。</p><p>我们有一个名为任务批处理缓冲区的附加硬件，它维护了数据ID和与该数据ID相对应的任务批次。在这里，不同于在单个数据ID上只能有一个相应的任务的情况，在任何行中可能有一个以上与单个数据ID相对应的任务。然后有一个Cam搜索模块，它将确定是否存在批处理的机会。假设可重构核心创建了这两个任务，它们将通过这个任务批处理缓冲区，然后可能会在执行期间调度到同一行。在执行过程中，可能只有一个任务相应于每个数据ID执行，当数据可用时，该数据可以被多播到所有依赖任务。在这个任务传播过程中，两个端口之间会交换一些消息，以检查资源的可用性等等。为了解释这一点，让我们看一下任务protoport。</p><p>这是Tasktream图，其中t1任务创建任务t2和t3，它们然后相互依赖于一个流边缘。让我们考虑三个核心的情况，其中一个核心包含原始任务，它将创建t2和t3，然后有一些核心可能会执行t2，而其他核心可能执行t3。请注意，t3可能有多个实例，就像在批处理的情况下，你可能会将数据流式传输到多个依赖任务。首先，创建t2和t3，然后父任务将在其核心上调度，当其数据可用时，它将通知t3，然后t3将被调度到某个核心。当它获得在那个核心的资源时，它将处于执行状态，然后向t2发送就绪确认消息。在这之后，t2可以开始流式传输数据，当所有核心都收到所有数据时，它们将发送完成信号，流通信可以关闭。</p><p>让我们转向评估。我们使用C内在函数编程Delta硬件，并使用GSL进行Tasktream和数据程序的编程。我们使用gem5和Ruby进行模拟。我们的基线是一个24核的sklcpu静态硬件，它没有任务，所有的工作都由控制核心调度。然后，我们研究了两个配置的提出的硬件，一个是只有任务的情况，其中仅开启了创建大小和优化，另一个是使用了任务和流恢复的Delta，所有优化都开启。以下是系统配置，我们使用16个核心和256 kg每秒的内存带宽，研究了五个工作负载，使用不同大小和密度的合成数据集。</p><p>从整体性能来看，我们将加速比标准化为静态并行执行。使用任务时，我们可以得到一些加速，然而，由于仍受到任务之间的依赖关系的限制，这些加速仅是适度的。流恢复可以提高性能，例如，在Jealeski中，流优化导致了改进的并行性，而批处理优化导致了重用的提升。为了了解收益来自何处，在这个图中，我们确定了多少内存流量被转换为纯网络流量，使用我们的流恢复边缘。我们发现在大多数工作负载中，超过50%的流量被转换为网络流量，只有很少的流量保持不变，这是加速的来源。</p><p>现在我们看一下流恢复的影响，我们还想了解流恢复和负载平衡是如何一起工作的。为此，让我们看一下Jealeski工作负载的周期级利用率，对比了两种情况，一种是只有任务的情况，即未经优化，另一种是开启了流恢复优化。在第一种情况下，我们显示了没有优化的情况，因此你无法进行流式通信，因此每次迭代之后仍然存在屏障。但在这之间，你可以使用大小和优化进行平衡。当你开启流恢复优化时，就没有屏障了，同时还提高了利用率。原因是因为流边缘提高了并行性，只有在负载平衡优化更多时，它才能更好地帮助你。</p><p>总的来说，任务并行ism使负载平衡更容易，但以损害程序结构为代价。因此，我们的Tasktream执行模型将局部性和计算结构暴露为一流的障碍和执行模型，并实现了对静态并行版本的2.2倍加速。最后，我们相信，为了使加速器成功并广泛采用，它们需要在各种工作负载上高效运行，支持任务并行ism是朝着这个方向迈出的一步，谢谢。</p><hr><p>欢迎大家参加我们关于Tasktream的讲座，这是一项通过恢复程序结构来加速任务并行工作负载的工作。我们的目标是将加速器的范围扩大到具有不规则并行性的工作负载，包括树和图工作负载、数据库和矩阵分解。这些工作负载的共同特点是异构任务、可变大小的资源需求和任务间的依赖关系。现有的任务并行工作没有考虑任务间的依赖关系，并且错过了一些我们后面会演示的机会，来可视化当前任务并行工作存在的问题。</p><p>为了演示当前任务并行工作存在的问题，考虑这个任务依赖图，其中节点是任务类型，边表示任务间的依赖关系。在传统的多核可重构硬件上，这些任务类型的不同实例会在核之间进行调度，而它们会通过共享内存进行通信，通过共享内存进行同步通信往往成为性能的关键瓶颈。</p><p>我们的洞察是在硬件中暴露这些任务间的依赖关系，并使用一种新颖的分布式任务管理系统来强制执行这些依赖关系。在先前的例子中，这些依赖关系现在将通过这些单元进行传递。我们的目标是为可重构加速器实现高效的任务并行，我们开发了一种称为Tasktream的新型程序表示，以实现负载均衡和局部优化。</p><p>在这个演讲中，我将首先讨论基于共享内存的任务模型存在的低效性，然后描述我们的Tasktream解决方案，它是一种新颖的程序表示，用于利用丢失的程序结构。然后，我将讨论Tasktream如何在可重构硬件上实现，然后我将进行评估和总结。我将以Jalesk为例进行说明，以激发我们的建议。</p><p>在Celesky的伪代码中，有一个外部循环，执行多个计算。这里有三种类型的计算，标量计算（称为point）、矢量计算和矩阵计算。由于这些计算的复杂性不同，Celesky具有异构任务。我们可以通过任务依赖图来看待它们的依赖关系。在单次迭代中，point任务对vector和matrix任务有标量依赖。对于这种工作负载，我们创建三种任务：point、vector和matrix，以表示标量依赖。在这个例子中，我们将矩阵分割成了正方形块，为了执行所有的依赖关系，我们需要在任务依赖图上放置一个屏障。在硬件上实现这个任务依赖图会导致重配置开销、负载不平衡和同步开销。我们的Tasktream执行模型使用一种新颖的图表示，可以在硬件上高效执行这样的任务依赖图。</p><p>Tasktream模型包含了程序的所有必要信息，以在可重构硬件上实现任务并行。其中一个特征是核心掩码，每个任务类型都可以与一个设置位的核心掩码相关联，表示哪个核心可以运行它。这使得无需重新配置就可以在不同的核心上调度任务。Tasktream最重要的方面是如何利用任务间的通信和计算结构，我们使用了三种边：创建边、流式恢复边和批处理边。创建边用于实现负载均衡，而流式恢复边和批处理边用于实现任务间的流和空间重用。</p><p>在实现Tasktream的可重构硬件上，我们将其实现为一个层次化图，其中Tasktream节点实现为数据流图，由计算和内存节点组成，通过依赖边连接。硬件方面，我们扩展了一个已知用于数据流执行模型的传统硬件。我们的硬件包括计算硬件和地址生成硬件，它们通过端口接口连接，而任务管理单元则负责动态创建任务。硬件还包括路由器，因为它是一个多核硬件，通过网格连接。在接下来的讨论中，我们将抽象出可重构核心，只关注任务管理单元。</p><p>对于创建边，我们引入了任务参数缓冲区，其中维护了所有准备好的和待处理的任务，按其ID排序。对于任何待处理的任务，都有一个确认缓冲区，它将确认数据已经可用，并将该任务设置为准备好。这种任务参数缓冲区的好处是可以在任务准备好时调度任务。对于流式恢复边，我们引入了额外的硬件，称为任务批处理缓冲区，它维护了与数据ID对应的数据和相应的任务批处理。有了这个缓冲区，我们可以在任何行中有多个与单个数据ID对应的任务，以及一个用于识别批处理机会的Cam搜索模块。这使得我们能够在执行过程中动态识别并调度任务，提高了并行性。</p><p>在评估方面，我们使用C内置函数对Delta硬件进行了编程，并使用GSL进行Tasktream和数据程序的模拟。我们的基线是一个24核的SKL CPU和一个静态并行无任务的Palace GRA。我们研究了两个提出的硬件配置，一个仅包含任务，其中仅打开了创建大小和优化，另一个是带有任务和流恢复的Delta，其中所有优化都打开。</p><p>我们使用16核和256 kg&#x2F;s内存带宽的系统配置，使用具有不同大小和密度的合成数据集的五个工作负载进行研究。在整体性能方面，我们将加速相对于静态并行执行进行了归一化。通过引入任务，我们可以获得一些加速，然而由于任务间的依赖关系限制，这些加速仅为中等水平。流恢复优化提高了性能，例如在Jealouski中，流式优化导致了改善的并行性，而批处理优化导致了重用的提高。</p><p>为了了解这些效益的来源，我们查看了流恢复边对内存流量的转换程度。我们发现，在大多数工作负载中，50%以上的流量被转换为网络流量，这是加速的来源。对流恢复的影响以及如何整体使用流恢复和负载平衡进行了研究。</p><p>在Jealouski工作负载的周期级利用率方面，我们比较了两种情况，一种是仅任务，未优化的情况，另一种是启用了流恢复优化的Delta。在仅任务的情况下，由于仍然存在障碍，循环中每次迭代后都有一个障碍。启用流恢复优化后，没有障碍，并且利用率提高。这是因为流式边导致了改善的并行性，负载平衡优化可以更好地帮助。</p><p>总的来说，任务并行性实现了更好的负载均衡，但以损害程序结构为代价。我们的Tasktream执行模型将局部性和计算结构作为一流对象，实现了相对于静态并行版本的2.2倍加速。最后，我们相信为加速器的成功和广泛采用，它们需要在各种工作负载上都高效，支持任务并行是朝着这个方向迈出的一步，谢谢</p><h3 id="4B"><a href="#4B" class="headerlink" title="4B"></a>4B</h3><p><strong>标题：Cleo：硬件软件代码设计的内存分解系统</strong></p><p><strong>引言：</strong></p><p>在数据中心领域，硬件资源的分解一直是一个备受关注的趋势。这意味着将单体服务器拆分为分布式网络连接的硬件组件。本次报告将介绍我们的工作”Cleo”，这是一个硬件软件代码设计，用于内存系统的分解。这是与易州、山旭浩、罗羽彤、黄以及英张等人的合作成果。</p><p><strong>硬件资源分解：</strong></p><p>硬件资源分解意味着将计算、内存、存储甚至加速器资源从服务器盒中取出，并连接到网络。这种分解提供更好的资源利用率、异构性和数据中心的灵活性。然而，许多现有工作集中在内存分解这一特定方面，表明内存分解对应用程序有益。然而，在论文评估部分，我们发现所有这些系统都是使用服务器构建或模拟的。</p><p>因此，首先要回答的问题是：我们是否需要构建用于内存分解的真实硬件设备？</p><p><strong>问题分析：</strong></p><p>在真实硬件内存分解设置中，我们需要一个包含标准低延迟内存节点的内存池，直接连接到网络，并为多个客户端提供共享内存访问。基于这种用例，我们提出了对内存设备进行分解的要求：</p><ol><li>内存设备的性能应与原始内存资源相似，满足网络线速，并具有低不稳定延迟。</li><li>内存设备应具有大内存容量。</li><li>在实际内存资源之上，内存设备不应增加额外成本。</li><li>由多个应用进程共享的设备应对托管内存站点和连接客户端数量具有良好的稳定性。</li><li>内存设备应灵活，以支持不同的用例。</li></ol><p><strong>问题挑战：</strong></p><p>服务器的成本问题是硬件分解的一个主要问题。服务器是大型系统，托管许多功能，其中只有很小一部分功能（如内存管理、DRM资源和网络栈）是内存分解所需的。未使用的功能可能导致资源浪费，违反了硬件资源分解的原则。</p><p>此外，在服务器中，RDMA（远程直接内存访问）直接连接到CPU，这限制了服务器的内存容量。网络栈中的RDMA需要使用服务器和其操作系统一起工作，导致RDMA Mini OS必须使用有限的硬件资源来缓存OS管理的数据结构，包括连接信息、队列对和内存信息页面表等。这种缓存受到限制，影响了可扩展性。当数据访问触发缺页时，RDMA硬件需要向OS请求页面的补充，这个过程可能需要长达16.8毫秒，比正常数据访问慢数千倍。</p><p>因此，现有服务器无法有效支持内存分解，需要构建真正的硬件设备。</p><p><strong>Cleo硬件内存系统的设计：</strong></p><p>Cleo是一个基于硬件的内存分解系统，用于虚拟化、保护和管理内存分解和独立内存节点。以下是Cleo接口和系统的概述：</p><ol><li><strong>Cleo Boards：</strong> 提供了基于硬件的内存分解板，向应用程序暴露虚拟内存接口。每个应用程序具有独立的虚拟内存空间。在Cleo系统中，Cleo的客户库为应用程序提供元数据和数据接口，用于访问远程内存。</li><li><strong>内存节点：</strong> Cleo Boards设计满足内存分解要求，具有自定义网络栈，通过基于AC的数据路径提供快速稳定的虚拟内存访问，并通过基于SoC的控制路径提供灵活的控制和内存管理功能。</li><li><strong>消除状态：</strong> 为了满足性能、成本、稳定性和灵活性等内存分解要求，Cleo的主要思想是尽可能从硬件状态中消除状态。通过高层次的方法、将状态从内存节点硬件移至计算节点软件、将状态从关键路径中移除以及对难以删除的状态进行优化等四个主要方法，实现了状态的最小化。</li></ol><p><strong>性能评估：</strong></p><p>经过前述优化，Cleo成功满足内存分解的所有性能要求，包括网络线速、吞吐量、低延迟和整体延迟。在有限的硬件资源下，Cleo实现了性能成本、稳定性和灵活性，并允许用户在内存站点自由运行计算。</p><p><strong>实际测试：</strong></p><p>在Spino HDL中实现了Cleo的硬件部分，并使用Selinx RMFPG板进行了Cleo板的原型设计。通过对五个实际内存分解应用程序的测试，Cleo在基本性能方面取得了成功，实现了100GB&#x2F;s的网络线速，2.8微秒的平均延迟和3.2微秒的整体延迟。</p><p><strong>性能比较：</strong></p><p>与RDM的两个代际（ConnectX-3和ConnectX-5）进行了性能比较。在处理大量具体客户端和大容量内存的情况下，Cleo保持了有界的延迟，而两代RDM系统在客户端数量或内存大小增加时未能扩展。</p><p><strong>应用场景：</strong></p><p>通过对Cleo与其他内存分解系统的性能比较，我们发现Cleo在处理大量客户端和大容量内存的情况下表现出色。Cleo的稳定性和灵活性使得内存分解应用程序能够在不同的场景中保持相同的完成时间，而基于RDM的系统在客户端数量和内存增加时开始减慢。</p><p><strong>Cleo的灵活性：</strong></p><p>Cleo不仅仅是一个内存分解系统，还允许用户在内存站点自由运行计算。除了基本的内存访问操作外，Cleo还支持在可重构的扩展路径中进行计算卸载，包括键值存储和指针追踪。用户可以通过FPGA构建扩展路径，将计算上传到可重构区域，也可以将计算卸载到处理器。这满足了灵活性的要求，多个Cleo Boards可以形成一个分布式系统，允许单一虚拟内存空间跨足多个内存节点。</p><p><strong>实际应用效果：</strong></p><p>通过在实际场景中测试Cleo的性能，我们验证了其在内存分解应用程序中的实际效果。例如，在图像压缩应用程序中，Cleo作为内存分解设备表现稳定，应用程序可以在客户端数量增加时保持相同的完成时间，而基于Argame的系统在相同条件下开始减速。</p><p><strong>总结：</strong></p><p>Cleo是一个真实的硬件内存分解系统，成功实现了内存分解的所有要求，包括性能、成本、稳定性和灵活性。构建Cleo的经验表明，构建真实硬件对应用程序既是可行的，也是有益的。硬件分解的本质提出了新的机会和挑战，而我们认识到，通过协同设计软件、硬件和系统是解决这些挑战的关键方法。我们希望Cleo能成为一个起点，激发更多关于真实硬件分解系统的探索。</p><p>如果您对Cleo感兴趣，请从我们的GitHub仓库获取。感谢您的聆听。</p><h4 id="9A"><a href="#9A" class="headerlink" title="9A"></a>9A</h4><p><strong>操作系统中的新型攻击：电压启动攻击</strong></p><p><strong>简介：</strong></p><p>我是Javier，今天我将向大家展示如何进行芯片上静态随机存储器（SRAM）的电压启动攻击。这是我与导师Matthew Hicks合作的研究，我们来自弗吉尼亚理工大学。随着智能设备的普及，图像系统和智能设备无处不在，用于安全、隐私和银行等关键应用。然而，这些设备也面临着物理攻击的威胁，需要我们采取措施进行保护。</p><p><strong>攻击目标：</strong></p><p>电压启动攻击主要瞄准芯片内部的SRAM。现代SOC（系统芯片）将电源分为多个域，攻击者通过利用电源域之间的隔离来进行攻击。我们的攻击模型是基于电源域分离的，通过在攻击时维持SRAM状态来获取目标芯片的敏感信息。</p><p><strong>攻击步骤：</strong></p><ol><li><strong>确定目标域：</strong> 首先，我们需要确定目标域及其相关引脚。</li><li><strong>测量电压：</strong> 测量目标引脚的电压并将探针放置在相同电压水平。</li><li><strong>断电重新启动：</strong> 突然切断整个处理器的电源，然后使用一个允许读取目标内存的固件进行重新启动。</li><li><strong>读取内存：</strong> 通过读取内存中的数据，我们可以获取攻击时的软件执行状态和虚拟机的数据。</li></ol><p><strong>攻击效果：</strong></p><p>我们在不同类型的内存上进行了三次概念验证攻击：寄存器、缓存和内部RAM。通过对树莓派3和4的Broadcom SOC以及来自Freescale的i.MX 535 SOC执行攻击，我们展示了在不同环境和操作系统设置下的攻击效果。这些攻击展示了对SOC内存进行电压启动攻击的可行性。</p><p><strong>攻击效果验证：</strong></p><p>在Linux环境中，我们创建了一个用户应用程序，该程序将自身绑定到每个核心，创建四个相同应用程序的实例，分别运行在SOC的每个核心上。通过这个应用程序，我们可以测试在不同情况下从缓存中检索多大量的数据。实验证明，当数据结构的大小与缓存大小相当时，由于后台进程和内核本身的逐出，我们开始失去数据。</p><p><strong>安全对策：</strong></p><p>我们提出了几种可能的安全对策来防范电压启动攻击。首先是消除电源域分离，但这并不是一个可行的解决方案。其次是在攻击时清除剩余内存，但这对系统的稳定性和可靠性有所影响。最有效的方法是在SOC启动时擦除SRAM状态，防止攻击者利用该状态进行攻击。</p><p><strong>总结：</strong></p><p>电压启动攻击是一种通过维持芯片内SRAM状态来进行的新型攻击，无需依赖物理攻击向量。我们的研究证明，即使在不同的环境和操作系统设置下，攻击者仍然能够成功地获取SRAM中的敏感信息。因此，防范这种类型的攻击至关重要，而我们提出的安全对策可以帮助系统设计者提高系统的安全性。</p><p>谢谢！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly: Change CSS</title>
      <link href="/2023/11/15/Butterfly-Change-CSS/"/>
      <url>/2023/11/15/Butterfly-Change-CSS/</url>
      
        <content type="html"><![CDATA[<h1 id="Butterfly-Change-CSS"><a href="#Butterfly-Change-CSS" class="headerlink" title="Butterfly: Change CSS"></a>Butterfly: Change CSS</h1><h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><p><strong>windows</strong>下，butterfly的默认安装位置在：<code>$&#123;yourhexoroot&#125;/node_modules/hexo-theme-butterfly</code>，因此需要默认修改的CSS在<code>$&#123;yourhexoroot&#125;/node_modules/hexo-theme-butterfly/source/css</code>。mac电脑暂时不了解······</p><p>如下是css中的文件树</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">css</span><br><span class="line">├── _global</span><br><span class="line">│   ├── function.styl</span><br><span class="line">│   └── index.styl</span><br><span class="line">├── _highlight</span><br><span class="line">│   ├── highlight</span><br><span class="line">│   │   ├── diff.styl</span><br><span class="line">│   │   └── index.styl</span><br><span class="line">│   ├── highlight.styl</span><br><span class="line">│   ├── prismjs</span><br><span class="line">│   │   ├── diff.styl</span><br><span class="line">│   │   ├── index.styl</span><br><span class="line">│   │   └── line-number.styl</span><br><span class="line">│   └── theme.styl</span><br><span class="line">├── _layout</span><br><span class="line">│   ├── aside.styl</span><br><span class="line">│   ├── chat.styl</span><br><span class="line">│   ├── comments.styl</span><br><span class="line">│   ├── footer.styl</span><br><span class="line">│   ├── footer.zip</span><br><span class="line">│   ├── head.styl</span><br><span class="line">│   ├── loading.styl</span><br><span class="line">│   ├── pagination.styl</span><br><span class="line">│   ├── post.styl</span><br><span class="line">│   ├── post.zip</span><br><span class="line">│   ├── relatedposts.styl</span><br><span class="line">│   ├── reward.styl</span><br><span class="line">│   ├── rightside.styl</span><br><span class="line">│   ├── sidebar.styl</span><br><span class="line">│   └── third-party.styl</span><br><span class="line">├── _mode</span><br><span class="line">│   ├── darkmode.styl</span><br><span class="line">│   └── readmode.styl</span><br><span class="line">├── _page</span><br><span class="line">│   ├── 404.styl</span><br><span class="line">│   ├── archives.styl</span><br><span class="line">│   ├── categories.styl</span><br><span class="line">│   ├── common.styl</span><br><span class="line">│   ├── flink.styl</span><br><span class="line">│   ├── homepage.styl</span><br><span class="line">│   └── tags.styl</span><br><span class="line">├── _search</span><br><span class="line">│   ├── algolia.styl</span><br><span class="line">│   ├── index.styl</span><br><span class="line">│   └── local-search.styl</span><br><span class="line">├── _tags</span><br><span class="line">│   ├── button.styl</span><br><span class="line">│   ├── gallery.styl</span><br><span class="line">│   ├── hexo.styl</span><br><span class="line">│   ├── hide.styl</span><br><span class="line">│   ├── inlineImg.styl</span><br><span class="line">│   ├── label.styl</span><br><span class="line">│   ├── note.styl</span><br><span class="line">│   ├── tabs.styl</span><br><span class="line">│   └── timeline.styl</span><br><span class="line">├── _third-party</span><br><span class="line">│   └── normalize.min.css</span><br><span class="line">├── index.styl</span><br><span class="line">└── var.styl</span><br></pre></td></tr></table></figure><h4 id="改变页面的宽度"><a href="#改变页面的宽度" class="headerlink" title="改变页面的宽度"></a>改变页面的宽度</h4><p>页面宽度由<code>$&#123;yourhexoroot&#125;/node_modules/hexo-theme-butterfly/source/css</code>下的</p><ol><li><code>_page/common.styl</code>的<code>.layout</code>控制最大宽度（max-width: 1200px、width: 100%）</li><li><code>_page/common.styl</code>的<code>.layout &gt; div:first-child</code>控制主页的“最近发表”，以及文章页的post区域宽度（width: 74%）</li><li><code>_layout/aside.styl</code>的<code>#aside-content</code>控制主页和文章页的aside区域宽度（width: 26%）</li></ol><p>如果想要修改宽度，那么aside宽度和post宽度要<code>&lt;=100%</code>，二者之和不足100%会优先靠左显示，二者之和大于100%设置不生效。比如我想做如下修改：max-width: 1300px，然后aside的width不变（经计算：(26%×1200)÷1300&#x3D;24%），其他给post的width（76%），那么就有：</p><p><code>_page/common.styl</code>：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">......</span><br><span class="line"></span><br><span class="line">.layout</span><br><span class="line">  display: flex</span><br><span class="line">  flex: 1 auto</span><br><span class="line">  margin: 0 auto</span><br><span class="line">  padding: 40px 15px</span><br><span class="line"><span class="addition">+ max-width: 1300px</span></span><br><span class="line"><span class="deletion">- max-width: 1200px</span></span><br><span class="line">  width: 100%</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">  &amp; &gt; div:first-child</span><br><span class="line"><span class="deletion">-   width: 74%</span></span><br><span class="line"><span class="addition">+   width: 76%</span></span><br><span class="line">    transition: all .3s</span><br></pre></td></tr></table></figure><p><code>_layout/aside.styl</code>：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#aside-content</span><br><span class="line"><span class="deletion">- width: 26%</span></span><br><span class="line"><span class="addition">+ width: 24%</span></span><br><span class="line">......</span><br></pre></td></tr></table></figure><h4 id="表格（非代码框）优化：宽度自动，文字居中"><a href="#表格（非代码框）优化：宽度自动，文字居中" class="headerlink" title="表格（非代码框）优化：宽度自动，文字居中"></a>表格（非代码框）优化：宽度自动，文字居中</h4><p>表格属性由<code>$&#123;yourhexoroot&#125;/node_modules/hexo-theme-butterfly/source/css</code>下的<code>_global/index.styl</code>的<code>table</code>控制所有表格属性（<strong>包括代码框！</strong>）。因此要修改table的属性需要格外小心，例如我想实现表格宽度自动，文字居中，但是不想对代码框做修改可以：</p><p><code>_global/index.styl</code>：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">......</span><br><span class="line">.table-wrap</span><br><span class="line">  overflow-x: scroll</span><br><span class="line">  margin: 0 0 20px</span><br><span class="line"><span class="addition">+ text-align: center</span></span><br><span class="line"></span><br><span class="line">table</span><br><span class="line">  display: table</span><br><span class="line"><span class="deletion">- width: 100%</span></span><br><span class="line"><span class="addition">+ width: auto</span></span><br><span class="line"><span class="addition">+ margin: auto</span></span><br><span class="line">  border-spacing: 0</span><br><span class="line">  border-collapse: collapse</span><br><span class="line">  empty-cells: show</span><br><span class="line">......</span><br></pre></td></tr></table></figure><h4 id="修改footer中的a标签和字体颜色"><a href="#修改footer中的a标签和字体颜色" class="headerlink" title="修改footer中的a标签和字体颜色"></a>修改footer中的a标签和字体颜色</h4><p>footer由<code>$&#123;yourhexoroot&#125;/node_modules/hexo-theme-butterfly/source/css</code>下的<code>_layout/footer.styl</code>的<code>#footer-wrap</code>控制。修改默认的字体颜色<code>&lt;span&gt;</code>和a标签字体颜色<code>&lt;a&gt;</code>：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">......</span><br><span class="line">#footer-wrap</span><br><span class="line">  position: relative</span><br><span class="line">  padding: 40px 20px</span><br><span class="line"><span class="deletion">- color: var(--light-grey)</span></span><br><span class="line"><span class="addition">+ color: var(--black)</span></span><br><span class="line">  text-align: center</span><br><span class="line"></span><br><span class="line">  a</span><br><span class="line"><span class="deletion">-   color: var(--light-grey)</span></span><br><span class="line"><span class="addition">+   color: var(--black)</span></span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>实现效果如下：</p><p>这里需要注意：两个color都需要修改，不然就会出现这种情况：</p><img src="https://typoraimagehost.oss-cn-beijing.aliyuncs.com/img/image-20231113125626324.png" alt="image-20231113125626324" style="zoom:67%;" /><p>这是因为a标签的颜色没有修改，也就是图中灰色的文字是a标签定义的，因此a标签的颜色也要改，改过之后：</p><img src="https://typoraimagehost.oss-cn-beijing.aliyuncs.com/img/image-20231113125835731.png" alt="image-20231113125835731" style="zoom:67%;" /><blockquote><p>参考：<a href="https://www.cnblogs.com/thinkgone/p/16349002.html">Butterfly主题修改颜色 - ThinkGone - 博客园 (cnblogs.com)</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人喜欢的鬼畜视频</title>
      <link href="/2023/11/07/%E2%9D%A4%E9%AC%BC%E7%95%9C%E8%A7%86%E9%A2%91/"/>
      <url>/2023/11/07/%E2%9D%A4%E9%AC%BC%E7%95%9C%E8%A7%86%E9%A2%91/</url>
      
        <content type="html"><![CDATA[<h4 id="1、火力种田王2"><a href="#1、火力种田王2" class="headerlink" title="1、火力种田王2"></a>1、火力种田王2</h4><div style="position:relative; padding-bottom:75%; width:100%; height:0">    <iframe src="//player.bilibili.com/player.html?aid=31252459&bvid=BV1pW411d7qj&cid=54605814&p=1&autoplay=false&high_quality=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"></iframe></div>#### 2、夺命老家<div style="position:relative; padding-bottom:75%; width:100%; height:0">    <iframe src="//player.bilibili.com/player.html?aid=14426314&bvid=BV1Ex411s7Ro&cid=23536770&p=1&autoplay=false" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"></iframe></div>#### 3、马保国英语版<div style="position:relative; padding-bottom:75%; width:100%; height:0">    <iframe src="//player.bilibili.com/player.html?aid=330344775&bvid=BV14A411x7MG&cid=258460785&p=1&autoplay=false" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"></iframe></div>#### 4、马保国日语版<div style="position:relative; padding-bottom:75%; width:100%; height:0">    <iframe src="//player.bilibili.com/player.html?aid=415403327&bvid=BV1QV411a75M&cid=259079683&p=1&autoplay=false" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"></iframe></div>#### 5、灌醉baby<div style="position:relative; padding-bottom:75%; width:100%; height:0">    <iframe src="//player.bilibili.com/player.html?aid=11624347&bvid=BV1Ex41167SS&cid=19207983&p=1&autoplay=false" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"></iframe></div>#### 6、我的烤面筋，融化你的心<div style="position:relative; padding-bottom:75%; width:100%; height:0">    <iframe src="//player.bilibili.com/player.html?aid=21061574&bvid=BV1GW411g7mc&cid=34548366&p=1&autoplay=false" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"></iframe></div><h4 id="7、面筋哥-饿狼传说"><a href="#7、面筋哥-饿狼传说" class="headerlink" title="7、面筋哥-饿狼传说"></a>7、面筋哥-饿狼传说</h4><div style="position:relative; padding-bottom:75%; width:100%; height:0">    <iframe src="//player.bilibili.com/player.html?aid=21433484&bvid=BV1iW411u7L2&cid=35269476&p=1&autoplay=false" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"></iframe></div><h4 id="8、你嫌弃破烂，抛弃了我"><a href="#8、你嫌弃破烂，抛弃了我" class="headerlink" title="8、你嫌弃破烂，抛弃了我"></a>8、你嫌弃破烂，抛弃了我</h4><div style="position:relative; padding-bottom:75%; width:100%; height:0">    <iframe src="//player.bilibili.com/player.html?aid=4376808&bvid=BV1rs411z7ux&cid=7421185&p=1&autoplay=false" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"></iframe></div><h4 id="9、【神医RAP】我还治不死你？"><a href="#9、【神医RAP】我还治不死你？" class="headerlink" title="9、【神医RAP】我还治不死你？"></a>9、【神医RAP】我还治不死你？</h4><div style="position:relative; padding-bottom:75%; width:100%; height:0">    <iframe src="//player.bilibili.com/player.html?aid=12012048&bvid=BV1qx411z7Rf&cid=19820718&p=1&autoplay=false" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"></iframe></div><h4 id="10、《愚公移山》"><a href="#10、《愚公移山》" class="headerlink" title="10、《愚公移山》"></a>10、《愚公移山》</h4><div style="position:relative; padding-bottom:75%; width:100%; height:0">    <iframe src="//player.bilibili.com/player.html?aid=948598836&bvid=BV1Xs4y1s7tN&cid=986360153&p=1&autoplay=false" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"></iframe></div><h4 id="11、-小夏-要当明星"><a href="#11、-小夏-要当明星" class="headerlink" title="11、(小夏)要当明星"></a>11、(小夏)要当明星</h4><div style="position:relative; padding-bottom:75%; width:100%; height:0">    <iframe src="//player.bilibili.com/player.html?aid=18757504&bvid=BV1hW411e7oH&cid=32510145&p=1&autoplay=false" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"></iframe></div><h4 id="12、【周某】我的看守所"><a href="#12、【周某】我的看守所" class="headerlink" title="12、【周某】我的看守所"></a>12、【周某】我的看守所</h4><div style="position:relative; padding-bottom:75%; width:100%; height:0">    <iframe src="//player.bilibili.com/player.html?aid=7432563&bvid=BV1Ds411Y72E&cid=12155199&p=1&autoplay=false" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"></iframe></div><h4 id="13、杰哥不要啦（原版视频）"><a href="#13、杰哥不要啦（原版视频）" class="headerlink" title="13、杰哥不要啦（原版视频）"></a>13、杰哥不要啦（原版视频）</h4><div style="position:relative; padding-bottom:75%; width:100%; height:0">    <iframe src="//player.bilibili.com/player.html?aid=838798450&bvid=BV1Tg4y1i7Dt&cid=211088300&p=1&autoplay=false" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"></iframe></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>解决问题的参考</title>
      <link href="/2023/11/07/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98%E7%9A%84%E7%BD%91%E9%A1%B5/"/>
      <url>/2023/11/07/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98%E7%9A%84%E7%BD%91%E9%A1%B5/</url>
      
        <content type="html"><![CDATA[<h4 id="1、cmd脚本实现删除文件-文件夹到回收站，而不是直接删除"><a href="#1、cmd脚本实现删除文件-文件夹到回收站，而不是直接删除" class="headerlink" title="1、cmd脚本实现删除文件&#x2F;文件夹到回收站，而不是直接删除"></a>1、cmd脚本实现删除文件&#x2F;文件夹到回收站，而不是直接删除</h4><p>如果使用命令<code>move xxx C:\$recycle.bin</code>或者<code>move E:\folder1 E:\$recycle.bin</code>，这个不是桌面上那个回收站，而是对应的分区（partition）的回收站，而且不同分区之间的回收站之间是不能共享的，例如执行命令<code>move E:\foler1 C:\$recycle.bin</code>会拒绝访问。</p><p>windows下好像没有一个直接的批处理命令可以实现，因此有大神使用c语言写的代码可以实现上述功能，编译成了<code>recycle.exe</code>等文件，把它们添加进环境变量的path中就可以很方便的使用cmd脚本调用了。脚本的名字是：cmdutils。</p><p>cmdutils官方地址：<a href="http://www.maddogsw.com/cmdutils/cmdutils.zip"> http://www.maddogsw.com/cmdutils/cmdutils.zip</a></p><p>使用的命令是：<code>recycle file</code>或者<code>recycle folder</code></p><p>参考：<a href="https://blog.csdn.net/sanqima/article/details/125350666">https://blog.csdn.net/sanqima/article/details/125350666</a></p><h4 id="2、hexo网页中嵌入bilibili视频窗口"><a href="#2、hexo网页中嵌入bilibili视频窗口" class="headerlink" title="2、hexo网页中嵌入bilibili视频窗口"></a>2、hexo网页中嵌入bilibili视频窗口</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 这个是可行的参考代码</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position:relative; padding-bottom:75%; width:100%; height:0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?bvid=BV1xx411c7XW<span class="symbol">&amp;amp;</span>page=1&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position:absolute; height: 100%; width: 100%;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">//这个是哔哩哔哩官方给的嵌入代码iframe标签，但是只能小窗口播放</span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=286024793&amp;bvid=BV1ef4y1y7ts&amp;cid=202583132&amp;p=1&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"></span><br><span class="line">// 对比之下，我们发现添加上如下的代码就能实现大窗口播放：</span><br><span class="line">style=&quot;position:absolute; height: 100%; width: 100%;</span><br><span class="line"></span><br><span class="line">// 如果不想让视频自动播放，那么还需要加入autoplay=0字段</span><br></pre></td></tr></table></figure><p>参考网址（hexo大佬！）：<a href="https://zsyyblog.com/5ece3ba2.html">如何在Hugo、Hexo博客中插入响应式Bilibili视频代码块 | 竹山一叶 (zsyyblog.com)</a></p><h4 id="3、打印文件树工具：tree-node-cli"><a href="#3、打印文件树工具：tree-node-cli" class="headerlink" title="3、打印文件树工具：tree-node-cli"></a>3、打印文件树工具：tree-node-cli</h4><p>该工具比原始的tree工具打印出来的文件树更好看，因此选择tree-node-cli，该工具依赖于nodejs，windows下使用nodejs的npm安装。安装命令是：<code>npm install --global tree-node-cli</code>或者<code>npm install -g tree-node-cli</code>。请务必指定全局安装！</p><p>windows下使用powershell安装之后在git bash中也可以直接调用，且在git hash中使用效果更好。</p><p>打印效果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">source</span><br><span class="line">├── _data</span><br><span class="line">│   └── link.yml</span><br><span class="line">├── _posts</span><br><span class="line">│   ├── Butterfly-Change-CSS.md</span><br><span class="line">│   ├── TOC.md</span><br><span class="line">│   ├── Todolist.md</span><br><span class="line">│   ├── hexo用法.md</span><br><span class="line">│   ├── 个人喜欢的鬼畜视频.md</span><br><span class="line">│   └── 解决问题的网页.md</span><br><span class="line">├── categories</span><br><span class="line">│   └── index.md</span><br><span class="line">├── link</span><br><span class="line">│   └── index.md</span><br><span class="line">├── self-css</span><br><span class="line">│   ├── font-code.css</span><br><span class="line">│   ├── font.css</span><br><span class="line">│   ├── monokai-sublime.css</span><br><span class="line">│   └── monokai.css</span><br><span class="line">├── self-font</span><br><span class="line">│   ├── FiraCode-Medium.woff2</span><br><span class="line">│   ├── FiraCode-Regular.woff2</span><br><span class="line">│   ├── PingFangSC-Medium.woff2</span><br><span class="line">│   └── PingFangSC-Regular.woff2</span><br><span class="line">├── self-img</span><br><span class="line">│   ├── April_is_your_lie_friendA.jpg</span><br><span class="line">│   ├── archiveimg.webp</span><br><span class="line">│   ├── handsomeboy-drawbyhand.png</span><br><span class="line">│   ├── icon</span><br><span class="line">│   │   ├── Butterfly-2.png</span><br><span class="line">│   │   ├── Egg.png</span><br><span class="line">│   │   ├── IceCream.png</span><br><span class="line">│   │   ├── Sunflower.png</span><br><span class="line">│   │   ├── butterfly-icon.png</span><br><span class="line">│   │   └── icp-icon.png</span><br><span class="line">│   ├── plief0.png</span><br><span class="line">│   ├── richlady.jpg</span><br><span class="line">│   └── scene</span><br><span class="line">│       ├── 1.webp</span><br><span class="line">│       ├── 2.webp</span><br><span class="line">│       ├── 3.webp</span><br><span class="line">│       ├── 4.webp</span><br><span class="line">│       ├── 5.webp</span><br><span class="line">│       ├── 6.webp</span><br><span class="line">│       ├── 7.webp</span><br><span class="line">│       └── 8.webp</span><br><span class="line">├── self-js</span><br><span class="line">├── tags</span><br><span class="line">│   └── index.md</span><br><span class="line">└── 图库</span><br><span class="line">    └── index.md</span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://www.zhihu.com/question/46555056">有什么好的生成文本树形目录的工具？ - 知乎 (zhihu.com)</a></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo用法</title>
      <link href="/2023/11/06/hexo%E7%94%A8%E6%B3%95/"/>
      <url>/2023/11/06/hexo%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="hexo用法"><a href="#hexo用法" class="headerlink" title="hexo用法"></a>hexo用法</h2><ol><li><p>yaml front matter中</p><ol><li>键值对的冒号<code>:</code>后边必须要空格</li><li>中文不用加引号</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">中文技术文档的写作规范</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">doc</span></span><br></pre></td></tr></table></figure></li><li><div class="tabs" id="test2"><ul class="nav-tabs"><button type="button" class="tab " data-href="test2-1">test2 1</button><button type="button" class="tab " data-href="test2-2">test2 2</button><button type="button" class="tab  active" data-href="test2-3">test2 3</button></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></li><li><div class="btn-center"><a class="btn-beautify outline larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline blue larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline pink larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline red larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline purple larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline orange larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline green larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></div></li><li><div class="timeline orange"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-02</p></div></div><div class='timeline-item-content'><p>这是测试页面</p></div></div></div></li><li></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> doc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Todolist</title>
      <link href="/2023/11/06/Todolist/"/>
      <url>/2023/11/06/Todolist/</url>
      
        <content type="html"><![CDATA[<h1 id="TDL"><a href="#TDL" class="headerlink" title="TDL"></a>TDL</h1><h3 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h3><ul><li>体系结构</li><li>编译</li><li>算法</li><li>数理逻辑</li><li>高级OS</li><li>学术道德通论</li><li>新中特</li><li>自然辩证法</li></ul><h3 id="Projects"><a href="#Projects" class="headerlink" title="Projects"></a>Projects</h3><ul><li>项目一：网站添加视频（自己收藏的视频网课等怎么链接？）、看书（能否跳转到看书的网页）、</li><li>项目二：网站界面优化，要简洁大方，要能在一个页面显示尽量多的文章</li><li>项目三：是否设置private page，存放一些自己的想法？</li><li>项目四：整理Edge收藏夹，写成blog放在网站里，方便查看</li></ul><h3 id="看书"><a href="#看书" class="headerlink" title="看书"></a>看书</h3><ul><li>拖延心理学</li><li>三体</li><li>平凡的世界</li></ul><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul><li>看网课（线代、机器学习、深度学习等）</li><li>整理收藏夹</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> top </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>导航页</title>
      <link href="/2023/11/06/TOC/"/>
      <url>/2023/11/06/TOC/</url>
      
        <content type="html"><![CDATA[<h3 id="网课"><a href="#网课" class="headerlink" title="网课"></a>网课</h3><ul><li><p><a href="https://open.163.com/newview/movie/courseintro?newurl=LHE4FRBU2">浙江大学公开课：数学传奇-网易公开课</a></p></li><li><p><a href="https://www.bilibili.com/video/BV16Z4y1U7oU/?spm_id_from=333.337.search-card.all.click&vd_source=2bfbef2cded19313bc71690dee83e2d9">麻省理工学院 - MIT - 线性代数</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1ib411t7YR/?spm_id_from=333.337.search-card.all.click&vd_source=2bfbef2cded19313bc71690dee83e2d9">【线性代数的本质】- 3Blue1Brown</a></p></li><li><p><a href="https://space.bilibili.com/88461692/channel/series">3Blue1Brown视频合集</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1Pa411X76s/?spm_id_from=333.337.search-card.all.click&vd_source=2bfbef2cded19313bc71690dee83e2d9">2022吴恩达机器学习Deeplearning.ai课程</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1Wv411h7kN/?spm_id_from=333.337.search-card.all.click">(强推)李宏毅2021&#x2F;2022春机器学习课程</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1FT4y1E74V/?spm_id_from=333.337.search-card.all.click&vd_source=2bfbef2cded19313bc71690dee83e2d9">双语字幕]吴恩达深度学习deeplearning.ai</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1Tb411M7FA/?spm_id_from=333.337.search-card.all.click&vd_source=2bfbef2cded19313bc71690dee83e2d9">【算法】算法导论-麻省理工</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1iW411d7hd/?spm_id_from=333.337.search-card.all.click&vd_source=2bfbef2cded19313bc71690dee83e2d9">2015 CMU 15-213 CSAPP 深入理解计算机系统 课程视频</a></p></li><li><p><a href="https://www.icourse163.org/course/ZJU-199001?from=searchPage&outVendor=zw_mooc_pcssjg_">程序设计入门——C语言_浙江大学_</a></p></li><li><p><a href="https://www.icourse163.org/course/ZJU-93001?from=searchPage&outVendor=zw_mooc_pcssjg_">数据结构_浙江大学_</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1nJ411V7bd/?spm_id_from=333.337.search-card.all.click">数据结构与算法基础（青岛大学-王卓）</a></p></li><li><p><a href="https://www.icourse163.org/course/BFU-1003382003?from=searchPage&outVendor=zw_mooc_pcssjg_">Web前端开发_北京林业大学_</a></p></li><li><p><a href="https://search.bilibili.com/all?vt=74077605&keyword=web%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91&from_source=webtop_search&spm_id_from=333.1007&search_source=5">web前端开发</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1x7411H7wa/?spm_id_from=333.337.search-card.all.click&vd_source=2bfbef2cded19313bc71690dee83e2d9">[MIT]计算机科学课堂中学不到的知识 The Missing Semester of Your CS Education(2020)</a></p></li><li><p><a href="https://missing.csail.mit.edu/">The Missing Semester of Your CS Education (mit.edu)</a></p></li></ul><h3 id="html在线书籍"><a href="#html在线书籍" class="headerlink" title="html在线书籍"></a>html在线书籍</h3><ul><li><a href="https://www.hello-algo.com/">Hello 算法 (hello-algo.com)</a></li></ul><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>清华大学大佬的leetcode刷题笔记</p><ul><li><a href="https://github.com/soulmachine/leetcode">soulmachine&#x2F;leetcode: LeetCode题解，151道题完整版</a></li></ul><p>数学历史、物理历史</p><ul><li><a href="https://www.zhihu.com/search?q=%E7%89%A9%E7%90%86%E5%8F%B2%E4%B9%A6%E7%B1%8D%E6%8E%A8%E8%8D%90&search_source=Suggestion&utm_content=search_suggestion&type=content">物理史书籍推荐 - 搜索结果 - 知乎 (zhihu.com)</a></li><li><a href="https://www.zhihu.com/question/615520152/answer/3162506130">有没有推荐的物理学史书籍</a></li></ul><p>读论文相关</p><ul><li><a href="https://academic.chatwithpaper.org/">ChatGPT 学术优化 (chatwithpaper.org)</a></li></ul><p>linux命令</p><ul><li><a href="https://www.guru99.com/linux-commands-cheat-sheet.html">Linux Command Cheat Sheet (guru99.com)</a></li><li><a href="https://www.linuxcool.com/">Linux命令大全(手册)</a></li></ul><h3 id="博客儿的博客"><a href="#博客儿的博客" class="headerlink" title="博客儿的博客"></a>博客儿的博客</h3><h4 id="大佬"><a href="#大佬" class="headerlink" title="大佬"></a>大佬</h4><ul><li>hexo大佬：<a href="https://zsyyblog.com/">Hexo 博客上手入门指南、性能优化、界面美化、扩展功能、各种疑难杂症等解决方案全系列合辑 | 竹山一叶 (zsyyblog.com)</a></li><li></li></ul><h4 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h4><p>hexo主题网址：<a href="https://hexo.io/themes/">Themes | Hexo</a></p><table><thead><tr><th>预览网站</th><th>hexo主题名</th></tr></thead><tbody><tr><td><a href="https://niexiaotao.cn/collect/">我的收藏 - AirCloud 日常 (niexiaotao.cn)</a></td><td>AirCloud</td></tr><tr><td>这个网站能调取视频<a href="https://kwaa.github.io/hexo-theme-m/">Hexo (kwaa.github.io)</a></td><td>M</td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> text </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
